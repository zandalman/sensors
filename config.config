# interval - data collection interval (seconds)
# indef - collect data indefinately (boolean)
# t_collect - data collection time (seconds) (ignored if indef == True)

[constants]
interval = 0
indef = False
t_collect = 100

# upload - print a message when data is successfully uploaded

[debug]
upload = False

# url - database server url
# port - port number
# username - username
# password - password
# database - database name

[influx]
url = 172.26.49.70
port = 8086
username = root
password = root
database = Alexandria

# location - directory name for missed data log files

[missed]
location = missedLogs

# sensor - defines section as sensor for parser
# use - use sensor (boolean)
# type - sensor type (options: test, temp_humid (Raspberry Pi sensor), magnetometer (Arduino sensor), gyroscope (Arduino sensor), accelerometer (Arduino sensor))
# tag_names - tag names seperated by commas
# tag_values - tag values seperated by commas (number of tag names and tag values must match)
# print - print measurements (boolean)

# pin - GPIO pin (required for Raspberry Pi sensors)
# board_port - Arduino port number (required for Arduino sensors)
# baud - baud rate (optional for Arduino sensors; defaults to 9600)

[th1]
sensor :
use = False
type = temp_humid
pin = 1

[th2]
sensor :
use = False
type = temp_humid
pin = 7

[th3]
sensor :
use = False
type = temp_humid
pin = 8

[test_sensor]
sensor :
use = True
type = test
print = True

## Instructions for defining a new sensor type
# 1. define a new sensor class in sensor_classes.py
# 2. add your new sensor class to the sensor_types dictionary in sensor_classes.py
# 3. import required modules in sensor_classes.py
# 4. add your new sensor class to the sensor type options comment in this file